procedure main(argc, argv[])
  // crear variable contadora para la espera activa
  shared position := 0;

  // creamos un mutex(siempre es compartido y no es protegido por nadie)
  // mutex solo asegura exclusion mutua, no asegura orden
  shared can_access_position := create_mutex()

  /* crea thread_count como resultado de convertir los parametros recibidos
  a la hora de ejecutar el programa a ints*/ 
  // el hilo que ejecuta main se comparte
  shared thread_count := integer(argv[1])
  /* crea un for de paralelismo de datos que crea hilos que realizan la misma
  tarea*/
  for thread_number := 0 to thread_count do
    create_thread(greet, thread_number)  // thread team
  end for
  print "Hello from main thread"
end procedure

procedure greet(thread_number, thread_count)
  lock(can_access_position)
  position := position + 1
  my_position := position
  unlock(can_access_position)

  print "Thread ", thread_number, "/", thread_count ": I arrived at position ",
    my_position;

end procedure